import numpy as np
import matplotlib.pyplot as plt

# Задаем граничные условия
N = 101
M = 51
u = np.zeros((N, M))
u[0, :] = -1 / np.linspace(0.01, 1, M)
u[-1, :] = -3 / np.linspace(0.01, 1, M)
u[:, 0] = -1 / np.linspace(0.01, 1, N)
u[:, -1] = -1 / np.linspace(0.01, 1, N)

# Задаем параметры метода сеток:точность и шаг по осям
epsilon = 1e-4
dx = 1 / (N - 1)
dy = 1 / (M - 1)

# Выполняем итерационный процесс
#Далее мы выполняем итерационный процесс метода сеток.
# Мы используем цикл while, который продолжается до тех пор, пока изменение значения функции на каждой точке сетки не станет меньше e
#Внутри цикла мы создаем новый массив u_new, который используется для хранения новых значений функции на следующем шаге итерационного процесса.
# Для вычисления новых значений функции мы используем формулу метода сеток и индексные срезы для ускорения вычислений и устранения необходимости явного перебора отдельных точек области
while True:
    u_new = np.zeros((N, M))
    u_new[1:-1, 1:-1] = (u[2:, 1:-1] + u[:-2, 1:-1] + u[1:-1, 2:] + u[1:-1, :-2]) / 4
    if np.max(np.abs(u_new - u)) < epsilon:
        break
    u = u_new

# Выводим график решения
x = np.linspace(0, 1, N)
y = np.linspace(0, 1, M)
X, Y = np.meshgrid(x, y)#Функция meshgrid() создает список массивов координатных сеток N-мерного координатного пространства для указанных одномерных массивов координатных векторов.
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X.T, Y.T, u, cmap='viridis')
plt.show()
